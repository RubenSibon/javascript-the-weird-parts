{"version":3,"sources":["js/lib/jKweerie.js"],"names":["global","jKweerie","init","change","prototype","classExists","el","cssClass","className","indexOf","isSingleClass","isClassList","toRemove","curSelected","singleClass","setAttribute","replace","toAdd","newClassName","applyChange","singleOrListClasses","c","getUniqueElement","selector","selected","document","querySelectorAll","length","s","addClass","removeClass","toggleClass","console","log","j$","window"],"mappings":"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","file":"jKweerie.d3ee607d.map","sourceRoot":"..","sourcesContent":["(function(global) {\n\n    /**\n     * jKweerie constructor function.\n     */\n    const jKweerie = function() {\n        return new jKweerie.init();\n    };\n\n    // Store an action.\n    const change = '';\n\n    /**\n     * Methods of jKweerie.\n     */\n    jKweerie.prototype = {\n\n        /**\n         * Check if class exists on HTML element.\n         * @param {string|object} el\n         * @param {string|object} cssClass\n         */\n        classExists: function(el, cssClass) {\n            return el.className.indexOf(cssClass) > 0;\n        },\n\n        /**\n         * Check if there is a single class (string).\n         * @param {string|object} selector\n         * @param {string|object} cssClass\n         */\n        isSingleClass: function(cssClass) {\n            return typeof cssClass === 'string';\n        },\n\n        /**\n         * Check if there is a list of class names (object).\n         * @param {string|object} selector\n         * @param {string|object} cssClass\n         */\n        isClassList: function(cssClass) {\n            return typeof cssClass === 'object';\n        },\n\n        toRemove: function(curSelected, singleClass) {\n            curSelected.setAttribute('class', curSelected.className.replace(singleClass, ''));\n        },\n\n        toAdd: function(curSelected, singleClass) {\n            const newClassName = curSelected.className + ' ' + singleClass;\n            curSelected.setAttribute('class', newClassName);\n        },\n\n        applyChange: function(curSelected, singleClass) {\n            // Toggle class: remove if it exists; add if it does not.\n            if (this.change === 'toggle') this.classExists(curSelected, singleClass) ? this.toRemove(curSelected, singleClass) : this.toAdd(curSelected, singleClass);\n\n            // Remove class from selected element if it exists.\n            if (this.change === 'remove' && this.classExists(curSelected, singleClass)) this.toRemove(curSelected, singleClass);\n\n            // Add class to selected element if it did not exist yet.\n            if (this.change === 'add' && !this.classExists(curSelected, singleClass)) this.toAdd(curSelected, singleClass);\n        },\n\n        singleOrListClasses: function(curSelected, cssClass) {\n            if (this.isSingleClass(cssClass)) {\n                this.applyChange(curSelected, cssClass);\n            } else if (this.isClassList(cssClass)) {\n                for (const c of cssClass) {\n                    this.applyChange(curSelected, cssClass[c]);\n                }\n            } else {\n                throw 'Is not a valid CSS class or classList.';\n            }\n        },\n\n        // Loop over node list and then apply change on each element.\n        getUniqueElement: function(selector, cssClass) {\n            const selected = document.querySelectorAll(selector);\n\n            if (selected.length === 1) {\n                    this.singleOrListClasses(selected[0], cssClass);\n            } else if (selected.length > 1) {\n                for (const s of selected) {\n                    this.singleOrListClasses(selected[s][0], cssClass);\n                }\n            } else {\n                throw 'No valid selector.';\n            }\n        },\n\n        /**\n         * Add a class to an HTML element.\n         * @param {string|object} selector\n         * @param {string|object} cssClass\n         */\n        addClass: function(selector, cssClass) {\n            this.change = 'add';\n\n            this.getUniqueElement(selector, cssClass);\n\n            return this;\n        },\n\n        /**\n         * Remove a class from an HTML element.\n         * @param {string|object} selector\n         * @param {string|object} cssClass\n         */\n        removeClass: function(selector, cssClass) {\n            this.change = 'remove';\n\n            this.getUniqueElement(selector, cssClass);\n\n            return this;\n        },\n\n        /**\n         * Toggle a class on an HTML element.\n         * @param {string|object} selector\n         * @param {string|object} cssClass\n         */\n        toggleClass: function(selector, cssClass) {\n            this.change = 'toggle';\n\n            this.getUniqueElement(selector, cssClass);\n\n            return this;\n        }\n\n    };\n\n    /**\n     * Init function to instantiate prototype (class),\n     * i.e. the actual object is created here.\n     */\n    jKweerie.init = function() {\n        console.log('jKweerie.init');\n    };\n\n    /**\n     * Make jKweerie.init refer to the prototype of the function constructor.\n     * This way we do not have to use the `new` keyword.\n     */\n    jKweerie.init.prototype = jKweerie.prototype;\n\n    /**\n     * Attach jKweerie to the global object (i.e. \"window\")\n     * and provide a shorthand `$G` to access it.\n     */\n    global.jKweerie = global.j$ = jKweerie;\n\n})(window);\n"]}